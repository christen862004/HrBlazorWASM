@page "/Emp/Edit/{id:int}"

@inject NavigationManager navManager

<h3>EditEmployeeComponent</h3>
@if (EmployeeObj != null)
{
    <EditForm Model="EmployeeObj" OnValidSubmit="Save"  OnInvalidSubmit="InvalidSave" >
        <!--Form Support Validation-->
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div>
            <label>NAme</label>
            <InputText @bind-Value="EmployeeObj.Name"  class="form form-control"></InputText>
            <ValidationMessage For="()=>EmployeeObj.Name"></ValidationMessage>
        </div>
        <div>
            <label>Salary</label>
            <InputNumber @bind-Value="EmployeeObj.Salary" class="form form-control"></InputNumber>
            <ValidationMessage For="()=>EmployeeObj.Salary"></ValidationMessage>
        </div>
        <div>
            <label>Image</label>
            <InputText @bind-Value="EmployeeObj.Image" class="form form-control"></InputText>
            <ValidationMessage For="()=>EmployeeObj.Image"></ValidationMessage>
        </div>
        <div>
            <label>DeptID</label>
            @* <InputNumber @bind-Value="EmployeeObj.Dept_Id" class="form form-control"></InputNumber> *@
            <InputSelect @bind-Value="EmployeeObj.Dept_Id" class="form form-control">
                @foreach (var item in DeptList)
                {
                    <option value="@item.Id">@item.Name</option>
                }
            </InputSelect>
            <ValidationMessage For="()=>EmployeeObj.Dept_Id"></ValidationMessage>
        </div>
        <input type="submit" class="btn btn-success" value="Save" />
    </EditForm>
    @EmployeeObj.Name 
    @EmployeeObj.Salary
    @EmployeeObj.Image
    @EmployeeObj.Dept_Id
}
else
{
    <h1>Wait or Invalid Id</h1>
}


@code {
    [Parameter]
    public int id { get; set; }

    [Inject]
    public EmployeeService EmployeeService { get; set; }

    [Inject]
    public DepartmentService DeptService { get; set; }

    public Employee EmployeeObj { get; set; }

    public List<Department> DeptList { get; set; }

    protected override void OnInitialized()
    {
        EmployeeObj = EmployeeService.getByID(id);

        DeptList = DeptService.getAll();

        base.OnInitialized();

    }
    void Save()
    {

        Console.WriteLine("Data saved");
        //API
        //redierct another conponent
        //navManager.NavigateTo($"/Emp/Details/{EmployeeObj.Id}");
        navManager.NavigateTo("/Emp/Details/"+id);

    }
    
    void InvalidSave()
    {

        Console.WriteLine("Invalid Data");
    }
}
